---
openapi: 3.0.1
info:
  title: API V1
  version: v1
paths:
  "/blogs":
    post:
      summary: Creates a blog
      tags:
      - Blogs
      parameters: []
      responses:
        '201':
          description: blog created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                title:
                  type: string
                content:
                  type: string
              required:
              - title
              - content
  "/blogs/{id}":
    get:
      summary: Retrieves a blog
      tags:
      - Blogs
      - Another Tag
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
      responses:
        '200':
          description: blog found
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  content:
                    type: string
                required:
                - id
                - title
                - content
            application/xml:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                  title:
                    type: string
                  content:
                    type: string
                required:
                - id
                - title
                - content
        '404':
          description: blog not found
        '406':
          description: unsupported accept header
  "/api/users/{user_id}/posts/{post_id}/comments":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    - name: post_id
      in: path
      description: post_id
      required: true
      schema:
        type: string
    get:
      summary: list comments
      responses:
        '200':
          description: successful
  "/api/posts/{post_id}/comments":
    parameters:
    - name: post_id
      in: path
      description: post_id
      required: true
      schema:
        type: string
    post:
      summary: Creates a comments
      tags:
      - Comments
      parameters: []
      responses:
        '201':
          description: Comments created
        '422':
          description: invalid request
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                text:
                  type: string
              required:
              - text
          application/xml:
            schema:
              type: object
              properties:
                text:
                  type: string
              required:
              - text
  "/api/users/{user_id}/posts":
    parameters:
    - name: user_id
      in: path
      description: user_id
      required: true
      schema:
        type: string
    get:
      summary: list posts
      responses:
        '200':
          description: successful
servers:
- url: https://{defaultHost}
  variables:
    defaultHost:
      default: www.example.com
